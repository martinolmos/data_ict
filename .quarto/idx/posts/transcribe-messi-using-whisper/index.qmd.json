{"title":"Using Whisper to Transcribe Messi","markdown":{"yaml":{"title":"Using Whisper to Transcribe Messi","subtitle":"Transcribir a Messi con Whisper","author":"Martin Olmos","date":"2023-02-03","execute":{"eval":false},"format":{"html":{"code-fold":"show"}},"slug":[],"categories":["NLP","IA","ML","Python","Messi"]},"headingText":"Download audio and video from Youtube","containsRefs":false,"markdown":"\n\n::: {.content-visible when-profile=\"english\"}\n[Whisper]('https://openai.com/blog/whisper/') is an open source model for speech recognition developed by [OpenAI](https://openai.com).\n\nWe will try to use it to add subtitles to a recent interview.\n\nHere is the original interview:\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n[Whisper]('https://openai.com/blog/whisper/') es un modelo de código abierto para reconocimiento del habla desarrollado por [OpenAI](https://openai.com).\n\nIntentaremos utilizarlo para agregar subtítulos a una entrevista reciente.\n\nAquí la entrevista original:\n\n:::\n\n<center>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RYXcR3YejwY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</center>\n\n::: {.content-visible when-profile=\"english\"}\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Descargo el audio y el video de Youtube\n\n:::\n\n```{python, eval=FALSE, echo=TRUE}\n\nimport youtube_dl as ydl\n\nvideo_url = 'https://www.youtube.com/watch?v=RYXcR3YejwY'\n\nydl_audio_opts = {\n    'outtmpl': 'whisper_messi_corto.%(ext)s',\n    'format': 'bestaudio/best',\n    'postprocessors': [{\n        'key': 'FFmpegExtractAudio',\n        'preferredcodec': 'mp3',\n        'preferredquality': '192'}]\n}\nydl_video_opts = {\n    'outtmpl': 'whisper_messi_corto.%(ext)s',\n}\n\nydl.YoutubeDL(ydl_audio_opts).download([video_url])\nydl.YoutubeDL(ydl_video_opts).download([video_url])\n\n```\n\n:::\n\n::: {.content-visible when-profile=\"english\"}\n## Generate the transcript\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Genero la transcripción\n\n:::\n\n```{python, eval=FALSE, echo=TRUE}\nimport whisperx\n\ndevice = \"cuda\" \naudio_file = \"whisper_messi_corto.mp3\"\n\n# transcribe with original whisper\nmodel = whisperx.load_model(\"large-v2\", device)\nresult = model.transcribe(audio_file)\n\nprint(result[\"segments\"]) # before alignment\n\n# load alignment model and metadata\nmodel_a, metadata = whisperx.load_align_model(language_code=result[\"language\"], device=device)\n\n# align whisper output\nresult_aligned = whisperx.align(result[\"segments\"], model_a, metadata, audio_file, device)\n```\n\n::: {.content-visible when-profile=\"english\"}\n## Embed the transcript in the video as subtitles\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Incrusto la transcripción en el video como subtítulos\n\n:::\n\n```{python, eval=FALSE, echo=TRUE}\n\nimport pandas as pd\nimport cv2\nfrom moviepy.editor import VideoFileClip\nimport moviepy.editor as mp\nfrom moviepy.editor import *\nfrom moviepy.video.tools.subtitles import SubtitlesClip\n\ndict1 = {'start':[], 'end':[], 'text':[]}\nfor i in result_aligned['segments']:\n  dict1['start'].append(int(i['start']))\n  dict1['end'].append(int(i['end']))\n  dict1['text'].append(i['text'])\n\ndf = pd.DataFrame.from_dict(dict1)\ndf.to_csv(f'whisper_messi_corto_subs.csv')\n\nvideocap = cv2.VideoCapture(\"whisper_messi_corto.mp4\")\nsuccess, image = videocap.read()\nheight = image.shape[0]\nwidth =image.shape[1]\n\ngenerator = lambda txt: TextClip(txt, font='P052-Bold', fontsize=width/50, stroke_width=.7, color='white', stroke_color = 'black', size = (width, height*.25), method='caption')\n\nsubs = tuple(zip(tuple(zip(df['start'].values, df['end'].values)), df['text'].values))\nsubtitles = SubtitlesClip(subs, generator)\n\nvideo = VideoFileClip('whisper_messi_corto.mp4')\nfinal = CompositeVideoClip([video, subtitles.set_pos(('center','bottom'))])\nfinal.write_videofile('whisper_messi_corto_con_subs.mp4', fps=video.fps, remove_temp=True, codec=\"libx264\", audio_codec=\"aac\")\n\n```\n\n::: {.content-visible when-profile=\"english\"}\nHere is the final product, the video with the subtitles:\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\nAquí el producto final, el video con los subtítulos:\n\n:::\n\n<center>\n<video width=\"640\" height=\"480\" controls>\n  <source src=\"whisper_messi_corto_con_subs.mp4\" type=\"video/mp4\">\n</video>\n</center>\n","srcMarkdownNoYaml":"\n\n::: {.content-visible when-profile=\"english\"}\n[Whisper]('https://openai.com/blog/whisper/') is an open source model for speech recognition developed by [OpenAI](https://openai.com).\n\nWe will try to use it to add subtitles to a recent interview.\n\nHere is the original interview:\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n[Whisper]('https://openai.com/blog/whisper/') es un modelo de código abierto para reconocimiento del habla desarrollado por [OpenAI](https://openai.com).\n\nIntentaremos utilizarlo para agregar subtítulos a una entrevista reciente.\n\nAquí la entrevista original:\n\n:::\n\n<center>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RYXcR3YejwY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</center>\n\n::: {.content-visible when-profile=\"english\"}\n## Download audio and video from Youtube\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Descargo el audio y el video de Youtube\n\n:::\n\n```{python, eval=FALSE, echo=TRUE}\n\nimport youtube_dl as ydl\n\nvideo_url = 'https://www.youtube.com/watch?v=RYXcR3YejwY'\n\nydl_audio_opts = {\n    'outtmpl': 'whisper_messi_corto.%(ext)s',\n    'format': 'bestaudio/best',\n    'postprocessors': [{\n        'key': 'FFmpegExtractAudio',\n        'preferredcodec': 'mp3',\n        'preferredquality': '192'}]\n}\nydl_video_opts = {\n    'outtmpl': 'whisper_messi_corto.%(ext)s',\n}\n\nydl.YoutubeDL(ydl_audio_opts).download([video_url])\nydl.YoutubeDL(ydl_video_opts).download([video_url])\n\n```\n\n:::\n\n::: {.content-visible when-profile=\"english\"}\n## Generate the transcript\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Genero la transcripción\n\n:::\n\n```{python, eval=FALSE, echo=TRUE}\nimport whisperx\n\ndevice = \"cuda\" \naudio_file = \"whisper_messi_corto.mp3\"\n\n# transcribe with original whisper\nmodel = whisperx.load_model(\"large-v2\", device)\nresult = model.transcribe(audio_file)\n\nprint(result[\"segments\"]) # before alignment\n\n# load alignment model and metadata\nmodel_a, metadata = whisperx.load_align_model(language_code=result[\"language\"], device=device)\n\n# align whisper output\nresult_aligned = whisperx.align(result[\"segments\"], model_a, metadata, audio_file, device)\n```\n\n::: {.content-visible when-profile=\"english\"}\n## Embed the transcript in the video as subtitles\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Incrusto la transcripción en el video como subtítulos\n\n:::\n\n```{python, eval=FALSE, echo=TRUE}\n\nimport pandas as pd\nimport cv2\nfrom moviepy.editor import VideoFileClip\nimport moviepy.editor as mp\nfrom moviepy.editor import *\nfrom moviepy.video.tools.subtitles import SubtitlesClip\n\ndict1 = {'start':[], 'end':[], 'text':[]}\nfor i in result_aligned['segments']:\n  dict1['start'].append(int(i['start']))\n  dict1['end'].append(int(i['end']))\n  dict1['text'].append(i['text'])\n\ndf = pd.DataFrame.from_dict(dict1)\ndf.to_csv(f'whisper_messi_corto_subs.csv')\n\nvideocap = cv2.VideoCapture(\"whisper_messi_corto.mp4\")\nsuccess, image = videocap.read()\nheight = image.shape[0]\nwidth =image.shape[1]\n\ngenerator = lambda txt: TextClip(txt, font='P052-Bold', fontsize=width/50, stroke_width=.7, color='white', stroke_color = 'black', size = (width, height*.25), method='caption')\n\nsubs = tuple(zip(tuple(zip(df['start'].values, df['end'].values)), df['text'].values))\nsubtitles = SubtitlesClip(subs, generator)\n\nvideo = VideoFileClip('whisper_messi_corto.mp4')\nfinal = CompositeVideoClip([video, subtitles.set_pos(('center','bottom'))])\nfinal.write_videofile('whisper_messi_corto_con_subs.mp4', fps=video.fps, remove_temp=True, codec=\"libx264\", audio_codec=\"aac\")\n\n```\n\n::: {.content-visible when-profile=\"english\"}\nHere is the final product, the video with the subtitles:\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\nAquí el producto final, el video con los subtítulos:\n\n:::\n\n<center>\n<video width=\"640\" height=\"480\" controls>\n  <source src=\"whisper_messi_corto_con_subs.mp4\" type=\"video/mp4\">\n</video>\n</center>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Tabla de contenidos","toc-title-website":"En esta página","related-formats-title":"Otros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fuente","section-title-abstract":"Resumen","section-title-appendices":"Apéndices","section-title-footnotes":"Notas","section-title-references":"Referencias","section-title-reuse":"Reutilización","section-title-copyright":"Derechos de autor","section-title-citation":"Cómo citar","appendix-attribution-cite-as":"Por favor, cita este trabajo como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor/a","title-block-author-plural":"Autores/as","title-block-affiliation-single":"Afiliación","title-block-affiliation-plural":"Afiliaciones","title-block-published":"Fecha de publicación","title-block-modified":"Fecha de modificación","callout-tip-title":"Tip","callout-note-title":"Nota","callout-warning-title":"Advertencia","callout-important-title":"Importante","callout-caution-title":"Precaución","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar todo el código","code-tools-hide-all-code":"Ocultar todo el código","code-tools-view-source":"Ver el código fuente","code-tools-source-code":"Ejecutar el código","code-line":"Línea","code-lines":"Líneas","copy-button-tooltip":"Copiar al portapapeles","copy-button-tooltip-success":"Copiado","repo-action-links-edit":"Editar esta página","repo-action-links-source":"Ver el código","repo-action-links-issue":"Informar de un problema","back-to-top":"Volver arriba","search-no-results-text":"Sin resultados","search-matching-documents-text":"documentos encontrados","search-copy-link-title":"Copiar el enlace en la búsqueda","search-hide-matches-text":"Ocultar resultados adicionales","search-more-match-text":"resultado adicional en este documento","search-more-matches-text":"resultados adicionales en este documento","search-clear-button-title":"Borrar","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Buscar","toggle-section":"Alternar sección","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo oscuro","toggle-reader-mode":"Alternar modo lector","toggle-navigation":"Navegación de palanca","crossref-fig-title":"Figura","crossref-tbl-title":"Tabla","crossref-lst-title":"Listado","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolario","crossref-prp-title":"Proposición","crossref-cnj-title":"Conjetura","crossref-def-title":"Definición","crossref-exm-title":"Ejemplo","crossref-exr-title":"Ejercicio","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apéndice","crossref-sec-prefix":"Sección","crossref-eq-prefix":"Ecuación","crossref-lof-title":"Listado de Figuras","crossref-lot-title":"Listado de Tablas","crossref-lol-title":"Listado de Listados","environment-proof-title":"Prueba","environment-remark-title":"Observación","environment-solution-title":"Solución","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Por defecto","listing-page-order-by-date-asc":"Menos reciente","listing-page-order-by-date-desc":"Más reciente","listing-page-order-by-number-desc":"De mayor a menor","listing-page-order-by-number-asc":"De menor a mayor","listing-page-field-date":"Fecha","listing-page-field-title":"Título","listing-page-field-description":"Descripción","listing-page-field-author":"Autor/a","listing-page-field-filename":"Nombre de archivo","listing-page-field-filemodified":"Fecha de modificación","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tiempo de lectura","listing-page-field-categories":"Categorías","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Todas","listing-page-no-matches":"No hay resultados"},"metadata":{"lang":"es","fig-responsive":true,"quarto-version":"1.3.450","theme":"cosmo","title-block-banner":true,"title":"Using Whisper to Transcribe Messi","subtitle":"Transcribir a Messi con Whisper","author":"Martin Olmos","date":"2023-02-03","slug":[],"categories":["NLP","IA","ML","Python","Messi"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}