{
  "hash": "360fe317f454a809786f310cfe22e58e",
  "result": {
    "markdown": "---\ntitle: Using Whisper to Transcribe Messi\nsubtitle: Transcribir a Messi con Whisper\nauthor: Martin Olmos\ndate: '2023-02-03'\nexecute: \n  eval: false\nformat: \n  html:\n    code-fold: show\nslug: []\ncategories:\n  - NLP\n  - IA\n  - ML\n  - Python\n  - Messi\n---\n\n::: {.content-visible when-profile=\"english\"}\n[Whisper]('https://openai.com/blog/whisper/') is an open source model for speech recognition developed by [OpenAI](https://openai.com).\n\nWe will try to use it to add subtitles to a recent interview.\n\nHere is the original interview:\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n[Whisper]('https://openai.com/blog/whisper/') es un modelo de código abierto para reconocimiento del habla desarrollado por [OpenAI](https://openai.com).\n\nIntentaremos utilizarlo para agregar subtítulos a una entrevista reciente.\n\nAquí la entrevista original:\n\n:::\n\n<center>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RYXcR3YejwY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</center>\n\n::: {.content-visible when-profile=\"english\"}\n## Download audio and video from Youtube\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Descargo el audio y el video de Youtube\n\n:::\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport youtube_dl as ydl\n\nvideo_url = 'https://www.youtube.com/watch?v=RYXcR3YejwY'\n\nydl_audio_opts = {\n    'outtmpl': 'whisper_messi_corto.%(ext)s',\n    'format': 'bestaudio/best',\n    'postprocessors': [{\n        'key': 'FFmpegExtractAudio',\n        'preferredcodec': 'mp3',\n        'preferredquality': '192'}]\n}\nydl_video_opts = {\n    'outtmpl': 'whisper_messi_corto.%(ext)s',\n}\n\nydl.YoutubeDL(ydl_audio_opts).download([video_url])\nydl.YoutubeDL(ydl_video_opts).download([video_url])\n```\n:::\n\n\n:::\n\n::: {.content-visible when-profile=\"english\"}\n## Generate the transcript\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Genero la transcripción\n\n:::\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport whisperx\n\ndevice = \"cuda\" \naudio_file = \"whisper_messi_corto.mp3\"\n\n# transcribe with original whisper\nmodel = whisperx.load_model(\"large-v2\", device)\nresult = model.transcribe(audio_file)\n\nprint(result[\"segments\"]) # before alignment\n\n# load alignment model and metadata\nmodel_a, metadata = whisperx.load_align_model(language_code=result[\"language\"], device=device)\n\n# align whisper output\nresult_aligned = whisperx.align(result[\"segments\"], model_a, metadata, audio_file, device)\n```\n:::\n\n\n::: {.content-visible when-profile=\"english\"}\n## Embed the transcript in the video as subtitles\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\n## Incrusto la transcripción en el video como subtítulos\n\n:::\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport pandas as pd\nimport cv2\nfrom moviepy.editor import VideoFileClip\nimport moviepy.editor as mp\nfrom moviepy.editor import *\nfrom moviepy.video.tools.subtitles import SubtitlesClip\n\ndict1 = {'start':[], 'end':[], 'text':[]}\nfor i in result_aligned['segments']:\n  dict1['start'].append(int(i['start']))\n  dict1['end'].append(int(i['end']))\n  dict1['text'].append(i['text'])\n\ndf = pd.DataFrame.from_dict(dict1)\ndf.to_csv(f'whisper_messi_corto_subs.csv')\n\nvideocap = cv2.VideoCapture(\"whisper_messi_corto.mp4\")\nsuccess, image = videocap.read()\nheight = image.shape[0]\nwidth =image.shape[1]\n\ngenerator = lambda txt: TextClip(txt, font='P052-Bold', fontsize=width/50, stroke_width=.7, color='white', stroke_color = 'black', size = (width, height*.25), method='caption')\n\nsubs = tuple(zip(tuple(zip(df['start'].values, df['end'].values)), df['text'].values))\nsubtitles = SubtitlesClip(subs, generator)\n\nvideo = VideoFileClip('whisper_messi_corto.mp4')\nfinal = CompositeVideoClip([video, subtitles.set_pos(('center','bottom'))])\nfinal.write_videofile('whisper_messi_corto_con_subs.mp4', fps=video.fps, remove_temp=True, codec=\"libx264\", audio_codec=\"aac\")\n```\n:::\n\n\n::: {.content-visible when-profile=\"english\"}\nHere is the final product, the video with the subtitles:\n\n:::\n\n::: {.content-visible when-profile=\"spanish\"}\nAquí el producto final, el video con los subtítulos:\n\n:::\n\n<center>\n<video width=\"640\" height=\"480\" controls>\n  <source src=\"whisper_messi_corto_con_subs.mp4\" type=\"video/mp4\">\n</video>\n</center>\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}